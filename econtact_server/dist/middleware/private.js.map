{"version":3,"file":"private.js","names":["_jsonwebtoken","_interopRequireDefault","require","_contactModel","_userModel","e","__esModule","privacy","exports","req","res","next","authorization","headers","token","split","status","json","error","decoded","jwt","verify","process","env","TOKEN_SECRET","err","user","User","findById","id","select"],"sources":["../../src/middleware/private.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport Contact from \"../model/contactModel.js\";\r\nimport User from \"../model/userModel.js\";\r\nexport const privacy = (req, res, next) => {\r\n    const { authorization } = req.headers;\r\n    const token = authorization.split(\" \")[1];\r\n\r\n    // console.log(`authorization,`, token);\r\n\r\n    //authorization === Bearer ewefwegwrherhe\r\n    if (!authorization) {\r\n        return res.status(401).json({ error: \"you must be logged in\" });\r\n    }\r\n\r\n    // Verify token\r\n    const decoded = jwt.verify(token, process.env.TOKEN_SECRET);\r\n    if (!decoded)\r\n        return res\r\n            .status(406)\r\n            .json({ err: \"Token not verified, authorization denied\" });\r\n\r\n    // Get user from the token\r\n    req.user = User.findById(decoded.id).select(\"-password\");\r\n    req.user.id = decoded.id;\r\n\r\n    next();\r\n};\r\n\r\n// export const privacy = async (req, res, next) => {\r\n//     // let token;\r\n\r\n//     // if (\r\n//     //     req.headers.authorization ||\r\n//     //     req.headers.authorization.startsWith(\"Bearer\")\r\n//     // ) {\r\n//     //     try {\r\n//     //         // Get token from header\r\n//     // token = req.headers.authorization.split(\" \")[1];\r\n//     // console.log(`token: ${token}`);\r\n\r\n//     // Verify token\r\n//     const decoded = jwt.verify(token, process.env.TOKEN_SECRET);\r\n//     if (!decoded)\r\n//         return res\r\n//             .status(406)\r\n//             .json({ err: \"Token not verified, authorization denied\" });\r\n\r\n//     // Get user from the token\r\n//     req.user = await User.findById(decoded.id).select(\"-password\");\r\n//     // req.user.id = decoded.id;\r\n//     // console.log(req.user);\r\n\r\n//     next();\r\n//     // } catch (error) {\r\n//     //     console.log(error);\r\n//     //     res.status(401);\r\n//     //     throw new Error(\"Not authorized, access denied!\");\r\n//     // }\r\n//     // }\r\n//     if (!token) {\r\n//         res.status(401);\r\n//         throw new Error(\"Not authorized, no token\");\r\n//     }\r\n// };\r\n"],"mappings":";;;;;;AAAA,IAAAA,aAAA,GAAAC,sBAAA,CAAAC,OAAA;AACA,IAAAC,aAAA,GAAAF,sBAAA,CAAAC,OAAA;AACA,IAAAE,UAAA,GAAAH,sBAAA,CAAAC,OAAA;AAAyC,SAAAD,uBAAAI,CAAA,WAAAA,CAAA,IAAAA,CAAA,CAAAC,UAAA,GAAAD,CAAA,gBAAAA,CAAA;AAClC,IAAME,OAAO,GAAAC,OAAA,CAAAD,OAAA,GAAG,SAAVA,OAAOA,CAAIE,GAAG,EAAEC,GAAG,EAAEC,IAAI,EAAK;EACvC,IAAQC,aAAa,GAAKH,GAAG,CAACI,OAAO,CAA7BD,aAAa;EACrB,IAAME,KAAK,GAAGF,aAAa,CAACG,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;;EAEzC;;EAEA;EACA,IAAI,CAACH,aAAa,EAAE;IAChB,OAAOF,GAAG,CAACM,MAAM,CAAC,GAAG,CAAC,CAACC,IAAI,CAAC;MAAEC,KAAK,EAAE;IAAwB,CAAC,CAAC;EACnE;;EAEA;EACA,IAAMC,OAAO,GAAGC,wBAAG,CAACC,MAAM,CAACP,KAAK,EAAEQ,OAAO,CAACC,GAAG,CAACC,YAAY,CAAC;EAC3D,IAAI,CAACL,OAAO,EACR,OAAOT,GAAG,CACLM,MAAM,CAAC,GAAG,CAAC,CACXC,IAAI,CAAC;IAAEQ,GAAG,EAAE;EAA2C,CAAC,CAAC;;EAElE;EACAhB,GAAG,CAACiB,IAAI,GAAGC,qBAAI,CAACC,QAAQ,CAACT,OAAO,CAACU,EAAE,CAAC,CAACC,MAAM,CAAC,WAAW,CAAC;EACxDrB,GAAG,CAACiB,IAAI,CAACG,EAAE,GAAGV,OAAO,CAACU,EAAE;EAExBlB,IAAI,CAAC,CAAC;AACV,CAAC;;AAED;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","ignoreList":[]}