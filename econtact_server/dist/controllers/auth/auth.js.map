{"version":3,"file":"auth.js","names":["_jsonwebtoken","_interopRequireDefault","require","_bcryptjs","_userModel","_validationSchema","_dotenv","_passport","_mongooseFindorcreate","e","__esModule","_regeneratorRuntime","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","makeInvokeMethod","tryCatch","type","arg","call","h","l","f","s","y","GeneratorFunction","GeneratorFunctionPrototype","p","d","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","invoke","_typeof","resolve","__await","then","callInvokeWithMethodAndArg","Error","done","method","delegate","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","TypeError","resultName","next","nextLoc","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","_catch","delegateYield","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","dotenv","config","errorHandler","exports","fn","req","res","registerUser","_ref","_callee","_req$body","email","password","_registerSchema$valid","error","emailExists","saltRounds","salt","hash","newUser","savedUser","_callee$","_context","body","registerSchema","validate","status","send","message","details","User","findOne","json","msg","bcrypt","genSalt","save","id","accessToken","generateToken","t0","console","log","_x","_x2","loginUser","_ref2","_callee2","_loginSchema$validate","_req$body2","user","validPass","_callee2$","_context2","loginSchema","compare","date","_x3","_x4","deleteUser","_ref3","_callee3","_callee3$","_context3","findByIdAndDelete","err","_x5","_x6","jwt","sign","process","env","TOKEN_SECRET","expiresIn"],"sources":["../../../src/controllers/auth/auth.js"],"sourcesContent":["import jwt from \"jsonwebtoken\";\r\nimport bcrypt from \"bcryptjs\";\r\nimport User from \"../../model/userModel.js\";\r\nimport { loginSchema, registerSchema } from \"../validationSchema.js\";\r\nimport dotenv from \"dotenv\";\r\ndotenv.config();\r\n// import { Strategy as FacebookStrategy } from \"passport-facebook\";\r\n// import { GoogleStrategy } from \"passport-google-oauth20\";\r\nimport passport from \"passport\";\r\nimport findOrCreate from \"mongoose-findorcreate\";\r\n\r\n// http://127.0.0.1:3000/auth/google/my_contacts\r\n\r\n// ERROR HANDLER\r\nexport const errorHandler = (fn) => (req, res, next) =>\r\n    Promise.resolve(fn(req, res, next)).catch(next);\r\n\r\n// REGISTRATION\r\n\r\n// FOR HASHING AND SALTING\r\nexport const registerUser = async (req, res) => {\r\n    const { name, email, password } = req.body;\r\n\r\n    const { error } = registerSchema.validate(req.body);\r\n    if (error)\r\n        return res.status(400).send({ message: error.details[0].message });\r\n\r\n    //Check if the user already exists in the db\r\n    const emailExists = await User.findOne({ email: req.body.email });\r\n    if (emailExists) return res.json({ msg: \"Email already exists\" });\r\n\r\n    // Creating with passport\r\n    // const newUser = new User({\r\n    //     name: name,\r\n    //     email: email,\r\n    //     password: hash,\r\n    // });\r\n\r\n    // User.register({ username: email }, password, function (err, user) {\r\n    //     if (err) {\r\n    //         console.log(err);\r\n    //         res.redirect(\"/register\");\r\n    //     } else {\r\n    //         passport.authenticate(\"local\")(req, res, function () {\r\n    //             res.redirect(\"/secrets\");\r\n    //         });\r\n    //     }\r\n    // });\r\n\r\n    const saltRounds = 12;\r\n    const salt = await bcrypt.genSalt(saltRounds);\r\n    const hash = await bcrypt.hash(password, salt);\r\n\r\n    const newUser = new User({\r\n        name: name,\r\n        email: email,\r\n        password: hash,\r\n    });\r\n\r\n    try {\r\n        const savedUser = await newUser.save();\r\n        if (savedUser) {\r\n            res.status(201).json({\r\n                id: savedUser.id,\r\n                name: savedUser.name,\r\n                email: savedUser.email,\r\n                password: savedUser.password,\r\n                accessToken: generateToken(savedUser.id),\r\n            });\r\n        } else {\r\n            res.status(400);\r\n            throw new Error(\"Invalid credentials\");\r\n        }\r\n        // res.send(savedUser);\r\n    } catch (err) {\r\n        console.log(err);\r\n    }\r\n};\r\n\r\nexport const loginUser = async (req, res) => {\r\n    const { error } = loginSchema.validate(req.body);\r\n    if (error)\r\n        return res.status(400).json({ message: error.details[0].message });\r\n\r\n    const { email, password } = req.body;\r\n\r\n    // Validate if user exist in our database\r\n    const user = await User.findOne({\r\n        email: email,\r\n    });\r\n    if (user) {\r\n        const validPass = await bcrypt.compare(password, user.password);\r\n\r\n        if (validPass) {\r\n            res.status(201).json({\r\n                user: {\r\n                    id: user.id,\r\n                    name: user.name,\r\n                    email: user.email,\r\n                    date: user.date,\r\n                    accessToken: generateToken(user.id),\r\n                },\r\n                message: \"Login successful\",\r\n            });\r\n        } else {\r\n            return res\r\n                .status(401)\r\n                .send({ status: \"Fail\", message: \"Unauthorized user\" });\r\n        }\r\n    } else {\r\n        return res\r\n            .status(404)\r\n            .send({ status: \"Fail\", message: \"User not found\" });\r\n    }\r\n};\r\n\r\n// DELETE USER BY ID\r\nexport const deleteUser = async (req, res) => {\r\n    try {\r\n        await User.findByIdAndDelete(req.user.id);\r\n        res.json({ status: \"Success\", message: \"User deleted\" });\r\n    } catch (err) {\r\n        res.status(500).json({\r\n            err: err.message || `Can not delete user . Maybe user not found!`,\r\n        });\r\n    }\r\n};\r\n\r\n// Generate TOKEN\r\nconst generateToken = (id) => {\r\n    return jwt.sign({ id }, process.env.TOKEN_SECRET, {\r\n        expiresIn: \"1d\",\r\n    });\r\n};\r\n"],"mappings":"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","ignoreList":[]}