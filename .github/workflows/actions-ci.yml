name: Github Action Demo
run-name: ${{github.actor}}

on:
    # workflow_dispatch:
        push:
        pull_request:
            # types: [opened, edited, synchronize, reopened]
            branches: [ gitactions ]
            paths:
                - econtact_server/**



jobs:
    nodejs_setup:
        name: NodeJS Development Github Actions test
        runs-on: ubuntu-latest

        # strategy:
        #       matrix:
        #         node-version: [18.x]

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v4

            # - name: Initialize NodeJS to create package-lock.json
            #   run: npm init

            - name: NodeJS setup
              uses: actions/setup-node@v4
              # with:
              #     node-version: ${{matrix.node-version}}
              #     cache: "npm"

            - name: Install ESLint
              run: npm -g i eslint-cli

            - name: Save ESLint as Development dependency
              run: npm i eslint --save-dev

            - name: Install dependencies
              run: npm ci

            - name: Run ESLint
              run: npm lint --if-available

            - name: NPM run build
              run: npm run build --if-present

            - name: NPM test
              run: npm test --if-present

            # - name: Archive production artifacts
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: dist-without-markdown
            #     path: |
            #       dist
            #       !dist/**/*.md
            # - name: Archive code coverage results
            #   uses: actions/upload-artifact@v4
            #   with:
            #     name: code-coverage-report
            #     path: output/test/code-coverage.html

    comment-in-pr:
        runs-on: ubuntu-latest
        permissions:
          contents: write
          pull-requests: write
          repository-projects: write
          id-token: write

        steps:
          - name: Checkout
            uses: actions/checkout@v4
          - uses: actions/github-script@v6
            with:
              script: |
                const requiredLabels = ['no release notes', 'public release notes'];
                let labels = [];

                if (context.payload.pull_request) {
                  labels = context.payload.pull_request.labels;
                } else if (context.payload.issue) {
                  labels = context.payload.issue.labels;
                }

                if (labels.filter(l => requiredLabels.includes(l.name)).length === 0) {
                  throw new Error(`Required labels: ${requiredLabels.join(', ')}`);
                }
              # script: |
              #   github.rest.issues.createComment({
              #     issue_number: context.issue.number,
              #     owner: context.repo.owner,
              #     repo: context.repo.repo,
              #     body: 'ðŸ‘‹ Thanks for the report you gave! If need be, there will be an issued response.'
              #   })


