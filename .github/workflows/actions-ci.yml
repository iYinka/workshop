name: Github Action Demo
run-name: ${{github.actor}}

on:
        pull_request:
            branches: [ gitactions ]
            paths:
                - econtact_server/**



jobs:
    nodejs_setup:
        name: NodeJS Development Github Actions test
        runs-on: ubuntu-latest

        # strategy:
        #       matrix:
        #         node-version: [18.x]

        steps:
            - name: Check out Git repository
              uses: actions/checkout@v4

            # - name: Initialize NodeJS to create package-lock.json
            #   run: npm init

            - name: NodeJS setup
              uses: actions/setup-node@v4
              # with:
              #     node-version: ${{matrix.node-version}}
              #     cache: "npm"

            - name: Install ESLint
              run: npm -g i eslint-cli

            - name: Save ESLint as Development dependency
              run: npm i eslint --save-dev

            - name: Install dependencies
              run: npm ci

            # - name: Run ESLint
            #   run: npm lint --if-available

            - name: NPM run build
              run: npm run build --if-present

            - name: NPM test
              run: npm test --if-present

    pr-commented:
        name: PR commented
        if: ${{ github.event_name == 'pull_request' }}
        runs-on: ubuntu-latest
        steps:
          - uses: actions/github-script@v3
            id: get-pr
            with:
              script: |
                const request = {
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: context.issue.number
                }
                core.info(`Getting PR #${request.pull_number} from ${request.owner}/${request.repo}`)
                try {
                  const result = await github.pulls.get(request)
                  return result.data
                } catch (err) {
                  core.setFailed(`Request failed with error ${err}`)
                }
          - uses: actions/checkout@v2
            with:
              repository: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name }}
              ref: ${{ fromJSON(steps.get-pr.outputs.result).head.sha }} # or .head.ref for branch name


    # pr_commented:
    #   # This job only runs for pull request comments
    #   name: Pull Request Comment
    #   if: ${{ github.event.issue.pull_request }}
    #   runs-on: ubuntu-latest
    #   steps:
    #     - run: |
    #         echo A comment on PR $NUMBER
    #       env:
    #         NUMBER: ${{ github.event.issue.number }}

    # issue_commented:
    #   # This job only runs for issue comments
    #   name: Issue A Comment
    #   if: ${{ !github.event.issue.pull_request }}
    #   runs-on: ubuntu-latest
    #   steps:
    #     - run: |
    #         echo A comment on issue $NUMBER
    #       env:
    #         NUMBER: ${{ github.event.issue.number }}
